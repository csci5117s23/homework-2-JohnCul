import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import {useEffect, useState} from 'react'
import CategorySelector from '@/components/CategorySelector.js'
import ToDoItem from '@/components/ToDoItem.js'
import { useAuth } from "@clerk/nextjs";
import {fetchDataChecked, postDataChecked} from '@/modules/Data.js'

const inter = Inter({ subsets: ['latin'] })
export default function Done() {    
    const API_ENDPOINT = 'https://backend-9f6j.api.codehooks.io/dev/toDoItem'
    const API_KEY = '271f7152-88ba-4d48-bc2d-f433a2c6d37d'

    const [posts, setPosts] = useState([]);
    const [loading, setLoading]=useState(true);
    const [newName, setNewName]=useState("");
    const [newCategoryHidden, setNewCategoryHidden] = useState(true);
    const [newCategory, setNewCategory] = useState("");
    const [selectedCategory, setSelectedCategory] = useState(0);
    const [newGet, setNewGet] = useState(false);
    const [categories, setCategories] = useState([]);
    const { isLoaded, userId, sessionId, getToken } = useAuth();
    const [newChecked, setNewChecked] = useState(false);

    let listItems=posts.map( (post) => <ToDoItem key={post.date} post={post} setNewChecked={setNewChecked}/>);

    // get data from the database
    useEffect(() => {
    async function loadToDoData(){
        if(userId){
        const token = await getToken({template: "codehooks"});
        fetchDataChecked(setPosts, setLoading, userId, token);
        }
    }
    loadToDoData();
    setNewChecked(false);
    }, [newGet, isLoaded, newChecked]);

    // post data to the database
    async function postData(selectedCategory) {
    if(userId){
        const token = await getToken({template: "codehooks"});
        postDataChecked(token, newGet, setNewGet, userId, newName, selectedCategory);
    }
    }

    //set category list whenever a new post comes in
    useEffect(() => {
    let newCats = [""];
    newCats=newCats.concat("New Category");
    posts.map(post => {
        if(!newCats.includes(post.category)){
        newCats = newCats.concat(post.category);
        }
    });
    setCategories(newCats);
    }, [posts]);

    // if valid name, add to database
    function addName() {
    let index = document.getElementById("categoriesSelector").selectedIndex;
    let curCategory = categories[index];
    if(index == 1){
        curCategory = newCategory;
    }
    if(newName!=""){
        postData(curCategory);
    }
    }


    if(loading){
    return(<span>loading...</span>)
    }else{
    return (
    <>
        <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        </Head>
        <h1 className={styles.header}>COMPLETED ITEMS</h1>
        <main className={styles.main}>
        <div className={styles.todoitem}>
            <div key="category" className="pure-u-1-5 categoryDisplayed"><div className={styles.headerLabelCategory}>Category</div></div>
            <div key="content" className="pure-u-1-5"><div className={styles.headerLabels}>Description</div></div>
            {posts.map( (post) => <ToDoItem key={post.date} post={post} setNewChecked={setNewChecked}/>)}
        </div>
        </main>
    </>
    )
    }

    
}